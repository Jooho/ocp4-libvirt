- name: Clean all config files for clean test
  hosts: localhost
  gather_facts: no
  become: yes
  vars:
    root_path: "../../.."
    
  tasks:
    - block:
      - name: Check if quay registry is running
        shell: "podman ps |grep quay-app|wc -l"
        register: quay_registry_status

      - name: Start SSHD on local
        service:
          name: sshd 
          state: started

      - name: Uninstall quay registry
        shell: "../bin/mirror-registry uninstall --autoApprove -v"
        when: 
        - quay_registry_status.changed 
        - quay_registry_status.stdout == '1'    

      - name: Delete files or directories
        file:
          path: "{{ item }}"
          state: absent
        with_items:      
        - "{{ root_path }}/prep/ansible/tasks/pause.tar"
        - "{{ root_path }}/prep/ansible/tasks/quay.tar"
        - "{{ root_path }}/prep/ansible/tasks/postgres.tar"
        - "{{ root_path }}/prep/ansible/tasks/redis.tar"

      when: disconnected is defined or cleanAll is defined  
      become: true
    #- name: kill matchbox container
    #  docker_container:
    #    name: matchbox_server
    #    state: absent

    - block:
      - name: Remove ssh known_hosts
        lineinfile:
          path: "{{ lookup('env','HOME')}}/.ssh/known_hosts"
          regexp: "{{ item }}"
          state: absent
        with_items:
        - "lb.{{ cluster_name }}.{{ network_domain | default('example.com') }}"
        - "bootstrap.{{ cluster_name }}.{{ network_domain | default('example.com') }}"
        - "master(.*).{{ cluster_name }}.{{ network_domain | default('example.com') }}"
        - "worker(.*).{{ cluster_name }}.{{ network_domain | default('example.com') }}"
        become: false
  
      - name: Find *.retry files
        find:
          paths: "{{ root_path }}"
          patterns: '*.retry'
          recurse: yes
        register: retry_list
  
      - name: Delete retry files 
        file:
          path: "{{ item.path }}"
          state: absent
        with_items:
        - "{{ retry_list.files }}" 

      - name: Delete files or directories
        file:
          path: "{{ item }}"
          state: absent
        with_items:
        - "{{ root_path }}/prep/connection.tf"
        - "{{ root_path }}/prep/ansible.log"
        - "{{ root_path }}/prep/matchbox_module.tf"
        - "{{ root_path }}/prep/meta-data"
        - "{{ root_path }}/prep/user-data"
        - "{{ root_path }}/prep/terraform.tfstate.backup"
        - "{{ root_path }}/prep/terraform.tfstate"
        - "{{ root_path }}/prep/terraform.tfvars"
        - "{{ root_path }}/prep/matchbox-main"
        - "{{ root_path }}/prep/ansible/inventory" 
        - "{{ root_path }}/ocp4/connection.tf"
        - "{{ root_path }}/ocp4/ocp_module.tf"
        - "{{ root_path }}/ocp4/terraform.tfstate.backup"
        - "{{ root_path }}/ocp4/terraform.tfstate"
        - "{{ lookup('env','HOME')}}/~/.terraform.d/registry.terraform.io"
        - /etc/NetworkManager/dnsmasq.d/{{ cluster_name }}_dns.conf

      - name: Delete Inventory Files
        shell: "rm -rf {{ item }}*"
        with_items:
        - "{{ root_path }}/prep/ansible/inventory"
        - "{{ root_path }}/prep/terraform.tfvars"


      - name: Delete folder
        shell: "rm -rf {{ item }}"
        with_items:
        - "{{ root_path }}/prep/{{cluster_name}}"
        - "{{ root_path }}/prep/.terraform"
        - "{{ root_path }}/prep/ansible/inventory.*"
        - "{{ root_path }}/prep/bootp.xsl*"
        - "{{ root_path }}/ocp4/{{cluster_name}}"
        - "{{ root_path }}/ocp4/.terraform"
      when: disconnected is not defined

    - block:      
      - name: kill matchbox container
        shell: "podman rm --force matchbox_server"
        ignore_errors: true
        become: true

      - name: Delete binary files
        file:
          path: "{{ item }}"
          state: absent
        with_items:
        - "{{ root_path }}/prep/ansilbe/bin"

      - name: Delete dummy network
        shell: "{{ item }}"
        with_items:
        - "ip addr del {{dummy_network_ip}}/24 brd + dev {{dummy_network_interface}} label {{dummy_network_interface}}:0"
        - "ip link delete {{dummy_network_interface}} type dummy"
        - "rmmod dummy"

      - name: Delete downloaded images/dns config
        shell: "rm -rf {{ item }}"
        with_items:        
        - /var/www/html/*
        - /var/lib/matchbox/assets/*
        - "{{ libvirt_storage_pool_path | default('/var/lib/libvirt/images/ocp4') }}"
        - /etc/dnsmasq.d/{{ cluster_name }}_dns.conf
        - /etc/resolv.conf

      - name: Update DNSMasq config
        lineinfile:
          path: /etc/dnsmasq.conf
          line: "listen-address={{dummy_network_ip}}"
          state: absent

      - name: Restart NetworkManager/dnsmasq
        service: 
          name: "{{ item }}"
          state: restarted
        with_items:
        - "NetworkManager"
        - "dnsmasq"
 
      when: cleanAll is defined
